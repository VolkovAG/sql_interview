/* #SQL #Fundamentals #Databases

    В качестве диалекта SQL использован DB Engine PostgreSQL 14.5, все запросы можно запустить

    Задача:
    Спроектировать структуру БД по рассадке людей по рабочим местам и кабинетам, чтобы можно было на любую дату выбрать
информацию, где какой из сотрудников сидел, в том числе и на текущую дату.
 - Написать запрос из этой базы на дату 15.01.2021.
 - Написать запрос, чтобы получить рассадку на текущую дату.

*/
--Создадим структуру таблиц БД по условию задачи
-- CREATE DATABASE "dbase_emploff" - чтобы не создавать в реальную БД, обойдемся созданием временных таблиц и ключей
-- Создадим таблицу сотрудников ----------------------------------------------------------------------------------------
CREATE TEMPORARY TABLE employee
    (
	id_empl SERIAL
	    CONSTRAINT empl_pk PRIMARY KEY,
	first_name varchar(40) NOT NULL,
	last_name varchar(40) NOT NULL
	);
-- Создадим таблицу помещений ------------------------------------------------------------------------------------------
CREATE TEMPORARY TABLE office
    (
	id_office SERIAL
	    CONSTRAINT office_pk PRIMARY KEY,
	name_office varchar(40) NOT NULL,
	name_place varchar(40) NOT NULL
	);
-- Создадим таблицу помещений ------------------------------------------------------------------------------------------
CREATE TEMPORARY TABLE place
    (
	empl_id int NOT NULL
		CONSTRAINT place_empl_id_fk
			REFERENCES employee,
	office_id int NOT NULL
		CONSTRAINT place_office_id_fk
			REFERENCES office,
	date date NOT NULL,
	CONSTRAINT place_pk
		PRIMARY KEY (empl_id, office_id, date)
	);

-- Заполним таблицу сотрудников данными
INSERT INTO employee (first_name, last_name) VALUES
	('Александр', 'Макаров'),
	('Виктор', 'Вниегретов'),
	('Алексей', 'Джуритов'),
	('Винеамин', 'Владимиров'),
	('Алексей', 'Чижиков'),
	('Татьяна', 'Сергеева'),
	('Валентина', 'Полежаева'),
	('Вероника', 'Урожаева'),
	('Оксана', 'Свиридова'),
	('Елена', 'Мельникова');

-- Заполним таблицу офисы данными
INSERT INTO office (name_office, name_place) VALUES
    ('Бухгалтерия', 'Рабочее место 1'),
	('Бухгалтерия', 'Рабочее место 2'),
	('Бухгалтерия', 'Рабочее место 3'),
	('Продажи', 'Рабочее место 1'),
	('Продажи', 'Рабочее место 2'),
	('Продажи', 'Рабочее место 3'),
	('Логистика', 'Рабочее место 1'),
	('Логистика', 'Рабочее место 2'),
	('Логистика', 'Рабочее место 3'),
	('Закупки', 'Рабочее место 1'),
	('Закупки', 'Рабочее место 2'),
	('Закупки', 'Рабочее место 3'),
	('Операторы', 'Рабочее место 1'),
	('Операторы', 'Рабочее место 2'),
	('Операторы', 'Рабочее место 3');

/*Заполняем таблицу place, сгенерируем рандомные данные работники, кабинеты/места, даты с 01.01.2021*/
INSERT INTO place (empl_id, office_id, date)
    SELECT generate_series(1, 10, 1),
           trunc(random()*15+1),
           (select '2021-01-01'::date + make_interval(0, 0, 0, i) as gs)
        FROM generate_series(0, 1000, 1) as i;

/*Пример сгенерированных записей таблицы place выглядит следующим образом
+-------+---------+----------+
|empl_id|office_id|date      |
+-------+---------+----------+
|1      |4        |2021-01-01|
|2      |4        |2021-01-01|
|3      |10       |2021-01-01|
...
|8      |7        |2023-09-28|
|9      |12       |2023-09-28|
|10     |7        |2023-09-28|
+-------+---------+----------+
*/

--Напишем и выполним запросы в соответствии с заданием и условиями -----------------------------------------------------

--Выборка согласно заданию на конктретную дату 15.01.2021 -----------------------------
SELECT last_name ||' '|| first_name AS name, name_office, name_place,  date FROM office
    INNER JOIN place p on office.id_office = p.office_id
    INNER JOIN employee e on e.id_empl = p.empl_id
	WHERE date = '2021-02-15' --применяем условие выборки на конкретную дату
    ORDER BY name_office, name_place, name; --сортируем для удобства просмотра

/* !результат выборки может отличаться т.к. данные генерируются, результат может отличаться
+-------------------+-----------+---------------+----------+
|name               |name_office|name_place     |date      |
+-------------------+-----------+---------------+----------+
|Мельникова Елена   |Бухгалтерия|Рабочее место 1|2021-02-15|
|Полежаева Валентина|Бухгалтерия|Рабочее место 1|2021-02-15|
|Свиридова Оксана   |Бухгалтерия|Рабочее место 3|2021-02-15|
|Урожаева Вероника  |Бухгалтерия|Рабочее место 3|2021-02-15|
|Джуритов Алексей   |Логистика  |Рабочее место 1|2021-02-15|
|Сергеева Татьяна   |Логистика  |Рабочее место 1|2021-02-15|
|Чижиков Алексей    |Логистика  |Рабочее место 3|2021-02-15|
|Вниегретов Виктор  |Операторы  |Рабочее место 2|2021-02-15|
|Владимиров Винеамин|Продажи    |Рабочее место 1|2021-02-15|
|Макаров Александр  |Продажи    |Рабочее место 2|2021-02-15|
+-------------------+-----------+---------------+----------+
*/

--Выборка согласно заданию на текущую дату ------------------------------------------------
SELECT last_name ||' '|| first_name AS name, name_office, name_place, date FROM office AS o
    INNER JOIN place AS p on o.id_office = p.office_id
    INNER JOIN employee AS e on e.id_empl = p.empl_id
	WHERE date = CURRENT_DATE --применяем условие выборки на текущую дату
    ORDER BY name_office, name_place, name; --сортируем для удобства просмотра

/* !результат выборки может отличаться т.к. данные генерируются и текущая дата устанавливается на день запуска запроса
+-------------------+-----------+---------------+----------+
|name               |name_office|name_place     |date      |
+-------------------+-----------+---------------+----------+
|Джуритов Алексей   |Бухгалтерия|Рабочее место 1|2022-08-10|
|Полежаева Валентина|Бухгалтерия|Рабочее место 1|2022-08-10|
|Урожаева Вероника  |Бухгалтерия|Рабочее место 1|2022-08-10|
|Мельникова Елена   |Закупки    |Рабочее место 1|2022-08-10|
|Сергеева Татьяна   |Закупки    |Рабочее место 1|2022-08-10|
|Владимиров Винеамин|Закупки    |Рабочее место 2|2022-08-10|
|Свиридова Оксана   |Закупки    |Рабочее место 3|2022-08-10|
|Макаров Александр  |Логистика  |Рабочее место 3|2022-08-10|
|Вниегретов Виктор  |Операторы  |Рабочее место 3|2022-08-10|
|Чижиков Алексей    |Продажи    |Рабочее место 1|2022-08-10|
+-------------------+-----------+---------------+----------+
*/