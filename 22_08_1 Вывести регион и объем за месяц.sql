/* #SQL #Fundamentals #Databases

    В качестве диалекта SQL использован DB Engine PostgreSQL 14.5, все запросы можно запустить

    Задача:
    Вывести регион, у которого объем потребления за январь 2021 года является максимальным среди всех регионов.
К названию региона вывести данный объем за месяц в одной строке.

Таблицы:
Справочник регионов - Regions
------------------------
| ID_REGION | REG_DESC |
------------------------

Справочник абонентов - Abonents
-----------------------------------
| ID_ABON | ID_REGION | ABON_DESC |
-----------------------------------

Таблица потребления - Consumption
-------------------------------
| Date | ID_ABON | Volume_kvt |
-------------------------------
*/
-- Создадим временные таблицы по условию задачи ------------------------------------------------------------------------
CREATE TEMPORARY TABLE regions (
    id_region int,
    reg_desc varchar(150));

CREATE TEMPORARY TABLE abonents (
    id_abon int,
    id_region int,
    abon_desc varchar(40));

CREATE TEMPORARY TABLE consumption (
    date date,
    id_abon int,
    volume_kvt int);

/* Для демонстрации работы запроса заполним таблицы данными ----------------------------------------------------------*/
-- Заполним таблицу region, (номера регионов не соответствуют регионам)
INSERT INTO regions (id_region, reg_desc) VALUES
(1, 'Алтайский край'),
(2, 'Краснодарский край'),
(3, 'Красноярский край'),
(4, 'Приморский край'),
(5, 'Ставропольский край'),
(6, 'Хабаровский край'),
(7, 'Амурская область'),
(8, 'Архангельская область'),
(9, 'Астраханская область'),
(10, 'Белгородская область'),
(11, 'Брянская область'),
(12, 'Владимирская область'),
(13, 'Волгоградская область'),
(14, 'Вологодская область'),
(15, 'Воронежская область'),
(16, 'Нижегородская область'),
(17, 'Ивановская область'),
(18, 'Иркутская область'),
(19, 'Республика Ингушетия'),
(20, 'Калининградская область'),
(21, 'Тверская область'),
(22, 'Калужская область'),
(23, 'Камчатский край'),
(24, 'Кемеровская область'),
(25, 'Кировская область'),
(26, 'Костромская область'),
(27, 'Республика Крым'),
(28, 'Самарская область'),
(29, 'Курганская область'),
(30, 'Курская область');

-- Заполним таблицу произвольно сгенерированными данными ID абонента, ID региона, и произвольные названия абонентов
INSERT INTO abonents (id_abon, id_region, abon_desc)
    SELECT
        trunc(random()*100000+10),
        trunc(random()*30+1),
        substr(md5(random()::text), 0, 25)
    FROM generate_series(0, 100, 1) as i;

-- наполним таблицу сгенерированных данных, и существующих данных ID абонентов
INSERT INTO consumption (date, id_abon, volume_kvt)
SELECT
    (select '2021-01-01'::date + make_interval(0, 0, 0, i) as dt) AS date, --сгенерируем последовательно даты
    a.id_abon AS id_abon, --возмем id абонентов из ранее заполненной таблицы
    trunc(random()*100000+1000) AS volume_kvt --рандомно проставим значения кВт
FROM abonents a, generate_series(0, 100, 1) as i; --сделаем сто серий рандомных записей

--Напишем и выполним запрос который выдаст требуемые имена клиентов в соответствии с заданым условием ------------------
-- #1. [SELECT] суммируем кВт с помощью [GROUP BY] по региону, объединив таблицы [JOIN]ами, c обязательным условием [WHERE]
-- #2. [SELECT] применяем OVER и ражируем по кВт т.к. возможно могут быть одинаковые максимальные значения
-- #3. [SELECT] выбираем записи с RANK = 1
SELECT reg_desc, sum_kvt FROM --#3
	(SELECT *, RANK() OVER (ORDER BY sum_kvt DESC) AS kvt_rank FROM --#2
		(SELECT r.reg_desc, SUM(c.volume_kvt) sum_kvt FROM regions r --#1.
				INNER JOIN abonents a USING(id_region)
				INNER JOIN consumption c USING(id_abon)
			WHERE EXTRACT(MONTH FROM c.date) = '01' AND EXTRACT(YEAR FROM c.date) = '2021'
			--p.s. для диалекта MySQL следует использовать условие как = WHERE MONTH(c.date) = '01' AND YEAR(c.date) = '2021'
			GROUP BY r.reg_desc) query_in
	) query_in1
    WHERE kvt_rank = 1;


/* p.s.-т.к. данные в таблицах "abonents" и "consumption" генерируются рандомно, то результат может отличаться от нижеприведенного

   результат выполнения:
+-----------------+--------+
|reg_desc         |sum_kvt |
+-----------------+--------+
|Кировская область|13414619|
+-----------------+--------+
*/