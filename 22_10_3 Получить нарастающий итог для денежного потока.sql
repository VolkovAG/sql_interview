/* #SQL #Fundamentals (OVER)

    В качестве диалекта SQL использовал DB Engine PostgreSQL 14.5, все запросы можно запустить

    Задача:
Есть таблица transactions в таком виде:
-------------------------
| date       | cash_flow |
|------------|-----------|
| 2018-01-01 | -1000     |
| 2018-01-02 | -100      |
| 2018-01-03 | 50        |
--------------------------
Где cash_flow — это выручка минус затраты за каждый день.
Написать запрос, чтобы получить нарастающий итог для денежного потока за каждый день
*/
--Создадим табличку по условию
CREATE TEMPORARY TABLE  transactions (
    data date,
    cash_flow int);

--Наполним простыми данными чуть больше чем по условию
INSERT INTO transactions (data, cash_flow) VALUES
    ('2018-01-01', -1000),
    ('2018-01-02', -100),
    ('2018-01-03', 50),
    ('2018-01-04', 150),
    ('2018-01-05', 200),
    ('2018-01-06', 250),
    ('2018-01-07', 550),
    ('2018-01-08', 600),
    ('2018-01-09', 1050);

--Выполним запрос в соответствии с заданием
SELECT
    data,
    cash_flow,
    SUM(cash_flow) OVER(ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS balance
    FROM  transactions;

/* результат запроса
+----------+---------+-------+
|data      |cash_flow|balance|
+----------+---------+-------+
|2018-01-01|-1000    |-1000  |
|2018-01-02|-100     |-1100  |
|2018-01-03|50       |-1050  |
|2018-01-04|150      |-900   |
|2018-01-05|200      |-700   |
|2018-01-06|250      |-450   |
|2018-01-07|550      |100    |
|2018-01-08|600      |700    |
|2018-01-09|1050     |1750   |
+----------+---------+-------+
 */